# This is the global configuration file for Workflow

# If the service is used by a component alone, it needs to be configured inside the component.
# If the service is dependent on multiple components and there is state synchronization,
# it needs to be configured separately, such as storage.

global:
  # Admin email, used for each component to send email to administrator
  email: "drycc@drycc.cc"
  # GatewayClass is cluster-scoped resource defined by the infrastructure provider.
  # This resource represents a class of Gateways that can be instantiated.
  gatewayClass: ""
  # A domain name consists of one or more parts.
  # Periods (.) are used to separate these parts.
  # Each part must be 1 to 63 characters in length and can contain lowercase letters, digits, and hyphens (-).
  # It must start and end with a lowercase letter or digit.
  clusterDomain: "cluster.local"
  # The publicly resolvable hostname to build your cluster with.
  #
  # This will be the hostname that is used to build endpoints such as "drycc.$HOSTNAME"
  platformDomain: ""
  # Whether certManagerEnabled is true to automatically generate drycc certificates
  certManagerEnabled: false

builder:
  service:
    # Service type default to ClusterIP, the entrance will be taken over by router.
    type: ClusterIP
    # If service.type is not set to NodePort, the following statement will be ignored.
    nodePort: ""

# Drycc Gateway is a gateway chart that integrates cert-manager.
gateway:
  # acme configuration takes effect if and only if certManagerEnabled is true
  acme:
    server: https://acme-v02.api.letsencrypt.org/directory
    #  EAB credentials
    externalAccountBinding:
      keyID: ""
      keySecret: ""

fluentbit:
  # Interval to flush output (seconds)
  flush: 5

controller:
  appImagePullPolicy: "IfNotPresent"
  # Possible values are:
  # enabled - allows for open registration
  # disabled - turns off open registration
  # admin_only - allows for registration by an admin only.
  registrationMode: "admin_only"
  # Set storageClassName, It is used for application mount.
  appStorageClass: "longhorn"
  # Set controller deployment  replicas
  replicas: 1
  # Set celery replicas
  celeryReplicas: 1
  ## databaseUrl and databaseReplicaUrl are will no longer use the built-in database component
  databaseUrl: ""
  databaseReplicaUrl: ""

valkey:
  enabled: true
  # The addrs parameters are configured only when using an off-cluster Valkey instance
  addrs: "" # A list of clusters: "127.0.0.1:7001/1,127.0.0.2:7002/1"
  password: "valkey password" # "" == no password
  # The following parameters are configured only when using an on-cluster Valkey instance
  replicas: 3
  persistence:
    enabled: false # Set to true to enable persistence
    size: 5Gi
    storageClass: ""

storage:
  enabled: true
  # The following parameters are configured only when using an off-cluster Storage instance
  lookup: path
  endpoint: ""
  # The following parameters are general parameters
  accesskey: ""
  secretkey: ""

grafana:
  enabled: true
  # Configure the following ONLY if you want persistence for on-cluster grafana
  # GCP PDs and EBS volumes are supported only
  persistence:
    enabled: false # Set to true to enable persistence
    accessMode: ReadWriteOnce
    size: 5Gi # PVC size
    ## grafana data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    ## Storage class of PV to bind. By default it looks for standard storage class.
    ## If the PV uses a different storage class, specify that here.
    storageClass: ""
    volumeName: ""

registry:
  enabled: true
  username: ""
  password: ""
  # The redirect parameters is configured only when using an on-cluster Registry instance
  # The subsection provides configuration for managing redirects from content backends.
  # For backends that support it, redirecting is disabled by default.
  redirect: "false"
  # host port for the registry proxy in the daemonset
  proxyPort: 5555

passport:
  enabled: true
  # The following parameters are configured only when using an on-cluster passport
  # Set passport deployment replicas
  replicas: 1
  ## databaseUrl and databaseReplicaUrl are will no longer use the built-in database component
  databaseUrl: ""
  databaseReplicaUrl: ""

database:
  enabled: true
  # The following parameters are configured only when using an on-cluster Database instance
  # The username and password to be used by the on-cluster database.
  # If left empty they will be generated
  # The user name should be set to lowercase letters 
  superuser: "postgres"
  superuserPassword: ""
  replicator: "standby"
  replicatorPassword: ""
  user: ""
  password: ""
  persistence:
    enabled: false # Set to true to enable persistence
    size: 5Gi # PVC size
    ## database data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    ## Storage class of PV to bind. By default it looks for standard storage class.
    ## If the PV uses a different storage class, specify that here.
    storageClass: ""

prometheus:
  enabled: true
  ## prometheus-server configuration##
  prometheus-server:
    replicas: 2
    retention: 15d
    # persistence config
    persistence:
      enabled: true
      accessMode: ReadWriteOnce
      size: 10Gi
      storageClass: ""
  ## node-exporter configuration##
  node-exporter:
    enabled: true
  ## kube-state-metrics configuration
  ##
  kube-state-metrics:
    enabled: true
  # The username and password to be used by the on-cluster database.
  username: "admin"
  password: "admin"
